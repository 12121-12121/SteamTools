<metro:MetroWindow x:Class="SteamTools.AuthTradeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
	    xmlns:metro2="clr-namespace:MetroTrilithon.UI.Controls;assembly=MetroTrilithon.Desktop"
        xmlns:viewModel="clr-namespace:SteamTools.ViewModels"
        xmlns:prop="clr-namespace:SteamTools.Properties"
        xmlns:services="clr-namespace:SteamTools.Services"
        xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
        xmlns:controls="clr-namespace:SteamTools.Views.Controls"
        xmlns:models="clr-namespace:SteamTools.Models"
        mc:Ignorable="d"
        Width="600"
		Height="400"
        x:Name="u"
        IsRestoringWindowPlacement="True"
        WindowStartupLocation="CenterScreen"
        Title="{Binding Title}"
		Background="{DynamicResource ThemeBrushKey}"
		Foreground="{DynamicResource ActiveForegroundBrushKey}"
		FontFamily="{StaticResource DefaultFontFamilyKey}"
        FontSize="16"
        UseLayoutRounding="True"
        TextOptions.TextFormattingMode="Display"
        SnapsToDevicePixels="True"
        d:DataContext="{d:DesignInstance viewModel:AuthTradeWindowViewModel}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <livet:LivetCallMethodAction MethodTarget="{Binding}"
										 MethodName="Initialize" />
        </i:EventTrigger>

        <i:EventTrigger EventName="Closed">
            <livet:DataContextDisposeAction />
        </i:EventTrigger>
        <livet:InteractionMessageTrigger Messenger="{Binding Messenger, Mode=OneWay}"
										 MessageKey="Window.Activate">
            <livet:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
        </livet:InteractionMessageTrigger>
        <livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.Transition">
            <livet:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"
													  IsOwned="False" />
        </livet:InteractionMessageTrigger>
        <livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.Transition.Child">
            <livet:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"
													  IsOwned="True" />
        </livet:InteractionMessageTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!--Title-->
        <Border Grid.Row="0"
                metro:MetroWindow.IsCaptionBar="True" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <metro:CaptionIcon Grid.Column="0" Padding="6,3">
                    <Image Source="pack://application:,,,/Resources/Asstes/app.ico" Width="32" Height="32"></Image>
                </metro:CaptionIcon>
                <TextBlock Grid.Column="1"
                           Grid.Row="0"
                           Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=Title}"
                           TextTrimming="CharacterEllipsis"
                           Foreground="{DynamicResource ForegroundBrushKey}"
                           FontSize="16"
                           VerticalAlignment="Center" />
                <StackPanel Height="32" VerticalAlignment="Top" Orientation="Horizontal" Grid.Column="2" WindowChrome.IsHitTestVisibleInChrome="True" Visibility="{Binding IsLoggedIn,Mode=OneWay,Converter={StaticResource BooleanToVisibilityConverter}}">
                    <metro:CaptionButton >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <livet:LivetCallMethodAction
                                            MethodName="Refresh_Click"
                                            MethodTarget="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Image Source="/Resources/Asstes/refresh.png" Margin="6,0" Width="21" ToolTip="{Binding Resources.Refresh,Source={x:Static services:ResourceService.Current}, Mode=OneWay}" />
                    </metro:CaptionButton>
                    <metro:CaptionButton >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <livet:LivetCallMethodAction
                                            MethodName="Logout_Click"
                                            MethodTarget="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Image Source="/Resources/Asstes/logout.png" Margin="6,0" Width="21" ToolTip="{Binding Resources.Logout,Source={x:Static services:ResourceService.Current}, Mode=OneWay}" />
                    </metro:CaptionButton>
                </StackPanel>
                <metro:SystemButtons Grid.Column="3"
                                        Grid.Row="0"
                                        VerticalAlignment="Top" />
            </Grid>
        </Border>

        <!--Body-->
        <StackPanel Margin="8" Grid.Row="1" 
                    Visibility="{Binding IsLoggedIn,Mode=OneWay,Converter={StaticResource ReverseBooleanToVisibilityConverter}}">
            <WrapPanel>
                <TextBlock Text="账号：" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"></TextBlock>
                <metro:PromptTextBox Prompt="" MinWidth="200" Text="{Binding UserName}"></metro:PromptTextBox>
            </WrapPanel>
            <Separator Opacity="0" Height="10"/>
            <WrapPanel>
                <TextBlock Text="密码：" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"></TextBlock>
                <PasswordBox MinWidth="200">
                    <i:Interaction.Behaviors>
                        <livet:PasswordBoxBindingSupportBehavior Password="{Binding Password}" />
                    </i:Interaction.Behaviors>
                </PasswordBox>
            </WrapPanel>
            <Separator Opacity="0" Height="10"/>
            <CheckBox Content="记住登录状态"  IsChecked="{Binding RememberMe}"></CheckBox>
            <Separator Opacity="0" Height="5"/>
            <metro2:CallMethodButton Content="登录" Width="200" Height="30" 
                                     HorizontalAlignment="Left" 
                                     MethodTarget="{Binding}" 
                                     MethodName="LoginButton_Click"></metro2:CallMethodButton>
            <TextBlock Text="确认交易需要您登陆您的Steam账号" Style="{StaticResource DetailTextStyleKey}"></TextBlock>
            <StackPanel Margin="8" Visibility="{Binding IsRequiresCaptcha,Mode=OneWay,Converter={StaticResource BooleanToVisibilityConverter}}">
                <WrapPanel>
                    <Border BorderBrush="{DynamicResource AccentBrushKey}" Width="206" Height="37" HorizontalAlignment="Left" BorderThickness=".99">
                        <Image Source="{Binding CodeImage,Mode=OneWay}" ></Image>
                    </Border>
                    <TextBlock Margin="10,0,0,0" Text="输入图片验证码" Style="{StaticResource DetailTextStyleKey}"></TextBlock>
                </WrapPanel>
                <Separator Opacity="0" Height="5"/>
                <metro:PromptTextBox Text="{Binding CodeImageChar}" Prompt="输入图中的验证码" Width="206" HorizontalAlignment="Left"></metro:PromptTextBox>
                <Separator Opacity="0" Height="5"/>
                <metro2:CallMethodButton Content="确定" Width="200" Height="30" HorizontalAlignment="Left" MethodTarget="{Binding}" 
                                     MethodName="CaptchaButton_Click"></metro2:CallMethodButton>
                <Separator Opacity="0" Height="5"/>
            </StackPanel>
        </StackPanel>
        <DockPanel Margin="8" Grid.Row="1" Visibility="{Binding IsLoggedIn,Mode=OneWay,Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel DockPanel.Dock="Top">
                <DockPanel>
                    <CheckBox Margin="0,0,10,0"></CheckBox>
                    <metro2:CallMethodButton Margin="0,0,10,0" Content="确认选中" Height="30" MethodName="CancelAllButton_Click"
                          MethodTarget="{Binding}"></metro2:CallMethodButton>
                    <metro2:CallMethodButton Margin="0,0,10,0" Content="否认选中" Height="30"
                                              MethodName="ConfirmAllButton_Click"
                                              MethodTarget="{Binding}"></metro2:CallMethodButton>
                    <metro2:CallMethodButton Margin="0,0,10,0" Content="否认所有" Height="30"
                                              MethodName="ConfirmAllButton_Click"
                                              MethodTarget="{Binding}"></metro2:CallMethodButton>
                    <metro2:CallMethodButton Margin="0,0,10,0" Content="确认所有" Height="30" MethodName="CancelAllButton_Click"
                          MethodTarget="{Binding}"></metro2:CallMethodButton>
                    <WrapPanel FlowDirection="RightToLeft" HorizontalAlignment="Right">
 
                    </WrapPanel>
                </DockPanel>
                <Rectangle  Height=".99"
									   Fill="{DynamicResource InactiveForegroundBrushKey}"
									   Margin="0,8" />
            </StackPanel>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ItemsControl Foreground="{DynamicResource ActiveForegroundBrushKey}"
                    ItemsSource="{Binding Confirmations,Mode=OneWay}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <DockPanel>
                                    <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                                        <CheckBox Margin="0,0,5,0"></CheckBox>
                                        <Image Source="{Binding Image,Mode=OneWay}" 
                                           Width="36" Height="36" Margin="0,0,5,0"></Image>
                                        <TextBlock>
                                    <Run Text="{Binding Details,Mode=OneWay}" FontSize="12"/>
                                    <LineBreak/>
                                    <Run Text="{Binding Traded,Mode=OneWay}"/>
                                    <LineBreak/>
                                    <Run Text="{Binding When,Mode=OneWay}"/>
                                        </TextBlock>
                                    </StackPanel>
                                    <WrapPanel Orientation="Vertical" DockPanel.Dock="Right" VerticalAlignment="Center" FlowDirection="RightToLeft">
                                        <metro2:CallMethodButton 
                                            MethodName="ConfirmTrade_Click"
                                            MethodParameter="{Binding}"
                                            MethodTarget="{Binding DataContext,ElementName=u}">
                                            <DockPanel>
                                                <Image Source="/Resources/Asstes/confirm.png" Width="20" VerticalAlignment="Center" Margin="0,0,5,0"
                       ToolTip="{Binding Resources.Auth_Add,Source={x:Static services:ResourceService.Current},Mode=OneWay}">
                                                </Image>
                                                <TextBlock Text="确认"></TextBlock>
                                            </DockPanel>
                                        </metro2:CallMethodButton>
                                        <metro2:CallMethodButton 
                                            MethodName="CancelTrade_Click"
                                            MethodParameter="{Binding}"
                                            MethodTarget="{Binding DataContext,ElementName=u}">
                                            <DockPanel>
                                                <Image Source="/Resources/Asstes/delete.png" Width="20"
                                                       VerticalAlignment="Center" Margin="0,0,5,0"
                       ToolTip="{Binding Resources.Auth_Add,Source={x:Static services:ResourceService.Current},Mode=OneWay}">
                                                </Image>
                                                <TextBlock Text="否认"></TextBlock>
                                            </DockPanel>
                                        </metro2:CallMethodButton>
                                    </WrapPanel>
                                </DockPanel>
                                <Rectangle DockPanel.Dock="Bottom"  Height=".99"
									   Fill="{DynamicResource InactiveForegroundBrushKey}"
									   Margin="0,8" />
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </DockPanel>
        <!--Footer-->
        <controls:StatusBar Grid.Row="2" DataContext="{Binding StatusBar}">
        </controls:StatusBar>
    </Grid>
</metro:MetroWindow>
